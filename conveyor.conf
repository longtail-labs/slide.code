include required("/stdlib/electron/electron.conf")

// Import metadata from your package.json and package-lock.json files.
// Conveyor uses this to determine dependencies, Electron version, and other critical information.
package-json {
  include required("package.json")
  include required("package-lock.json")
}

app {
  display-name = "slide.code"
  fsname = slide-code
  rdns-name = com.slide.code.app
  vendor = Hydraulic

  // Version from environment or package.json
  # version = ${?env.BUILD_VERSION} ${?package-json.version}

  electron.version = 37.2.0

  // Publish the generated download page to GitHub Pages.
  site {
    github {
      // In production, this should come from environment variables
      oauth-token = ${env.SITE_RELEASE_TOKEN}

      // Optional: upload the download site to a branch.
      pages-branch = "gh-pages"
    }
  }

  // Contact information
  contact-email = "jordan@howlett.io"

  // Mac OS minimum version
  mac.info-plist.LSMinimumSystemVersion = "13.0.0"

  // Define inputs to include only necessary files from all packages and dependencies
  inputs = [
    // Main entry point for the Electron app
    {
      from = "packages/entry-point.js"
      to = "packages/entry-point.js"
    },

    // Main application's package.json (only the root one is needed)
    {
      from = "package.json"
      to = "package.json"
    },
    {
      from = "node_modules_build"
      to = "node_modules",
    }
  ]

  mac.amd64.bundle-extras +=
  {
    from = "drizzle"
    to = "Resources/drizzle"
  }

  mac.aarch64.bundle-extras +=
  {
    from = "drizzle"
    to = "Resources/drizzle"
  }

  windows.amd64.package-extras += {
    from = "drizzle"
    to = "Resources/drizzle"
  }

  windows.aarch64.package-extras += {
    from = "drizzle"
    to = "Resources/drizzle"
  }

  // Platform-specific libsql binaries
  mac.aarch64.bundle-extras += {
    from = "bundled_modules/libsql/darwin-arm64"
    to = "Resources/libsql/darwin-arm64"
  }

  mac.amd64.bundle-extras += {
    from = "bundled_modules/libsql/darwin-x64"
    to = "Resources/libsql/darwin-x64"
  }

  windows.amd64.package-extras += {
    from = "bundled_modules/libsql/win32-x64"
    to = "Resources/libsql/win32-x64-msvc"
  }

  windows.amd64.package-extras += {
    from = "bundled_modules/libsql/win32-x64"
    to = "node_modules/@libsql/win32-x64-msvc"
  }

  windows.aarch64.package-extras += {
    from = "bundled_modules/libsql/win32-arm64"
    to = "Resources/libsql/win32-arm64-msvc"
  }

  windows.aarch64.package-extras += {
    from = "bundled_modules/libsql/win32-arm64"
    to = "node_modules/@libsql/win32-arm64-msvc"
  }

  // ASAR packaging configuration to archive your app's source code
  electron {
    asar = {
      // Enable ASAR packaging with specific unpack patterns
      unpack = [
        "**/*.node"
      ]
      version = "3.4.1"
    }

    // Prune devDependencies to exclude them from the final build
    prune = false
  }

  // Enable updates explicitly
  # updates = background
  updates = aggressive

  // Add protocol handler configuration
  protocols = [
    {
      name = "slide.code"
      schemes = ["slide.code"]  // This will handle slide:// URLs
    }
  ]

  // Explicitly focus on Mac for this workflow
  machines = [mac.amd64, mac.aarch64, windows.amd64]
  # machines = [mac.aarch64]
}

// Set compression level to high to maximize build size reduction
app.compression-level = "high"

// Ensure Conveyor uses the specified compatibility level
conveyor.compatibility-level = 19.0
# app.mac.sparkle-options.SUScheduledCheckInterval = 60
# app.mac.sparkle-options.SUAutomaticallyUpdate = true
