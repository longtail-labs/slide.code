name: macOS Beta Nightly Build

on:
  # Run nightly at midnight UTC
  schedule:
    - cron: '0 3 * * *'
  push:
    branches:
      - windows
  # Allow manual triggering
  workflow_dispatch:

jobs:
  generate-version:
    runs-on: blacksmith-4vcpu-ubuntu-2204
    # runs-on: ubuntu-latest
    outputs:
      beta_version: ${{ steps.set-version.outputs.beta_version }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Generate beta version in package.json
        run: |
          # Get base version from package.json
          BASE_VERSION=$(node -p "require('./package.json').version.split('.').slice(0, 2).join('.')")
          # Create a timestamp (Unix epoch time in seconds)
          TIMESTAMP=$(date +%s)
          # Final beta version with timestamp
          BETA_VERSION="${BASE_VERSION}.${TIMESTAMP}"
          echo "Beta version: $BETA_VERSION"
          echo "beta_version=${BETA_VERSION}" >> $GITHUB_OUTPUT
        id: set-version

  conveyor-beta-build:
    name: Build Beta macOS App
    runs-on: blacksmith-4vcpu-ubuntu-2204
    needs: [generate-version]
    permissions:
      contents: write
      pages: write

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: useblacksmith/setup-node@v5
        with:
          node-version: '22'

      - name: Install Dependencies
        run: npm install

      - name: Build Repo
        run: |
          npm run build:beta

      - name: Prepare Signing Certificates
        run: |
          mkdir -p build
          echo "${{ secrets.APPLE_CERT }}" | base64 --decode > build/apple.cer
          # echo "${{ secrets.WINDOWS_CERT }}" | base64 --decode > build/windows.cer
          echo "${{ secrets.APPLE_NOTARIZATION_PRIVATE_KEY }}" > AuthKey_W442ZA3W3A.p8
      - name: Setup build environment
        run: |
          npm run make:beta
        env:
          VITE_APTABASE_APP_KEY: ${{ secrets.VITE_APTABASE_APP_KEY }}

      - name: Update package.json with beta version
        run: |
          # Update package.json with the beta version using npm pkg
          npm pkg set version="${{ needs.generate-version.outputs.beta_version }}-beta"

      - name: Run Conveyor for Beta Build
        uses: hydraulic-software/conveyor/actions/build@v18.1
        env:
          APPLE_ASP: ${{ secrets.APPLE_ASP }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SITE_RELEASE_TOKEN: ${{ secrets.SITE_RELEASE_TOKEN }}
          NODE_ENV: production
          ENV: production
          MODE: beta
          BUILD_VERSION: ${{ needs.generate-version.outputs.beta_version }}
          VITE_APTABASE_APP_KEY: ${{ secrets.VITE_APTABASE_APP_KEY }}
          APPLE_NOTARIZATION_ISSUER_ID: ${{ secrets.APPLE_NOTARIZATION_ISSUER_ID }}
          APPLE_NOTARIZATION_KEY_ID: ${{ secrets.APPLE_NOTARIZATION_KEY_ID }}
          APPLE_NOTARIZATION_PRIVATE_KEY: ${{ secrets.APPLE_NOTARIZATION_PRIVATE_KEY }}
          APPLE_NOTARIZATION_PRIVATE_KEY_PATH: AuthKey_W442ZA3W3A.p8
          MAC_CERTIFICATE_PATH: build/apple.cer
          # WINDOWS_CERTIFICATE_PATH: build/windows.cer
        with:
          command: make copied-site
          signing_key: ${{ secrets.SIGNING_KEY }}
          extra_flags: -f conveyor.beta.conf
          agree_to_license: 1

      - name: Restore Original Node Modules
        run: |
          echo "üîÑ Restoring original node_modules..."
          if [ -d "node_modules.bk" ]; then
            # Remove any node_modules directory that might have been created
            if [ -d "node_modules" ]; then
              rm -rf node_modules
            fi
            mv node_modules.bk node_modules
            echo "‚úÖ Node modules restored successfully"
          else
            echo "‚ö†Ô∏è Warning: node_modules.bk not found for restoration"
          fi
