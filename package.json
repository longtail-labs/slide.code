{
  "name": "slide.code",
  "productName": "SlideCode",
  "version": "0.0.1",
  "beta": false,
  "description": "IDE for Claude Code",
  "main": "packages/entry-point.js",
  "author": "example.com",
  "homepage": "https://electron-vite.org",
  "updateSite": "http://localhost:3000",
  "debug": {
    "env": {
      "VITE_DEV_SERVER_URL": "http://127.0.0.1:7777"
    }
  },
  "private": true,
  "type": "module",
  "engines": {
    "node": ">=22.0.0"
  },
  "scripts": {
    "postinstallARCHIVE": "patch-package",
    "make:prod": "cross-env NODE_ENV=production MODE=production bash ./build-modules.sh",
    "make:beta": "cross-env NODE_ENV=production MODE=beta bash ./build-modules.sh",
    "format": "npx prettier --write \"**/*.{js,mjs,cjs,ts,mts,cts,vue,json}\"",
    "lint": "npm run lint --workspaces",
    "start:app": "cross-env NODE_ENV=development MODE=development node _scripts/watch.js",
    "start:backend": "cd packages/backend && encore run",
    "start": "npx concurrently -n \"app,backend\" \"npm run start:app\" \"npm run start:backend\"",
    "preview": "vite preview",
    "generate:encore-client": "cd packages/backend && encore gen client --output=../core/src/clients/encore.ts",
    "generate:encore-client:note": "cd packages/backend && encore gen client --output=../../widgets/note/src/clients/encore.ts",
    "generate:encore-client:local": "cd packages/backend && encore gen client --output=../clients/src/encore/client.ts --env=local",
    "ARCHIVEprebuild": "npm run generate:encore-client",
    "build": "cross-env PRODUCTION=true NODE_ENV=production MODE=development nx run-many --target=build --all --configuration=development",
    "reset:nx": "nx reset",
    "prebuild:prod": "patch-package",
    "prebuild:beta": "patch-package",
    "build:prod": "cross-env PRODUCTION=true NODE_ENV=production MODE=production nx run-many --target=build --all --configuration=production",
    "build:beta": "cross-env PRODUCTION=true NODE_ENV=production MODE=beta nx run-many --target=build --all --configuration=beta --verbose",
    "build:without:nx": "npm run build:core && npm run build:app",
    "build:core": "cd packages/core && npm run build",
    "build:app": "cd apps/main && npm run build",
    "build:note": "cd widgets/note && npm run build",
    "build:beta:workspace": "npm run build:ssr-client && npm run build:shared && npm run build:schema && npm run build:core && npm run build:app",
    "debug:prod": "echo 'Running Slide with forced update check. Update staging will be in ~/Library/Caches/com.slide.app/org.sparkle-project.Sparkle/Installation' && FORCE_UPDATE_CHECK=1 /Applications/Slide.app/Contents/MacOS/Slide",
    "debug:beta": "echo 'Running Slide Beta with forced update check. Update staging will be in ~/Library/Caches/com.slide.beta.app/org.sparkle-project.Sparkle/Installation' && FORCE_UPDATE_CHECK=1 /Applications/Slide.beta.app/Contents/MacOS/Slide",
    "test": "npm run test --workspaces",
    "typecheck": "npm run typecheck --workspaces",
    "compile": "cross-env NODE_ENV=production BUILD_VERSION=0.0.1 conveyor -f conveyor.cli.conf -Kapp.machines=mac.aarch64 make mac-app --logs-dir conveyor-logs --overwrite",
    "compile:local": "cross-env PRODUCTION=true NODE_ENV=production MODE=beta conveyor -f conveyor.local.conf --verbose -Kapp.machines=mac.aarch64 make mac-app",
    "compile:local:inputs": "conveyor -f conveyor.local.conf -Kapp.machines=mac.aarch64 make base-configured-inputs",
    "vendors": "cross-env ELECTRON_RUN_AS_NODE=1 electron _scripts/update-electron-vendors.js",
    "ARCHIVEpostinstall": "electron-rebuild -f -w @libsql/client && electron-rebuild -f -w libsql && npm run build:prod",
    "rebuild:all": "electron-rebuild",
    "rebuild:libsql": "electron-rebuild -f -w @libsql/client",
    "populate:tasks": "tsx _scripts/populate-tasks/index.ts",
    "populate:links": "tsx _scripts/populate-tasks/populate-links.ts",
    "db:migrate:init": "NODE_OPTIONS='--import tsx' npx drizzle-kit generate --custom",
    "db:migrate:generate": "NODE_OPTIONS='--import tsx' drizzle-kit generate --config=drizzle.config.ts",
    "db:migrate:apply": "drizzle-kit migrate --config=drizzle.config.ts",
    "db:reset": "rimraf drizzle && rimraf test-db.sqlite.db && npm run db:migrate:generate && npm run db:migrate:apply",
    "db:open": "tsx _scripts/open-database.js",
    "studio": "NODE_OPTIONS='--import tsx' npx drizzle-kit studio",
    "logs": "node _scripts/open-logs.js",
    "logs:clear": "node _scripts/clear-logs.js",
    "signed": "codesign --sign \"Mushroom DAO Holdings Corp. (78UAXU8QG8)\" --timestamp --options runtime bundled_modules/libsql/darwin-arm64/index.node",
    "download-libsql": "tsx _scripts/download-libsql.ts",
    "test:mcp:claude": "tsx _scripts/test-mcp-bitsplat.ts",
    "test:mcp:direct": "tsx _scripts/test-mcp-direct.ts",
    "storybook": "storybook dev -p 6006",
    "build-storybook": "storybook build"
  },
  "dependencies": {
    "@slide.code/main": "*",
    "dotenv": "^16.4.5",
    "@libsql/client": "^0.15.9",
    "drizzle-orm": "^0.44.2",
    "effect": "^3.16.9"
  },
  "devDependencies": {
    "@electron-toolkit/eslint-config-prettier": "^3.0.0",
    "@electron-toolkit/eslint-config-ts": "^3.1.0",
    "@electron-toolkit/tsconfig": "^1.0.1",
    "@electron/rebuild": "^4.0.1",
    "@npmcli/map-workspaces": "^4.0.2",
    "@nx/devkit": "^21.2.1",
    "@nx/web": "21.2.1",
    "@types/node": "^24.0.3",
    "@types/react": "npm:types-react@19.0.0-alpha.3",
    "@types/react-dom": "npm:types-react-dom@19.0.0-alpha.3",
    "@typescript-eslint/eslint-plugin": "^8.35.0",
    "@vite/vitejs-client": "^2.2.10",
    "autoprefixer": "^10.4.21",
    "concurrently": "^9.2.0",
    "cross-env": "^7.0.3",
    "drizzle-kit": "^0.31.4",
    "electron": "^36.5.0",
    "eslint": "^9.29.0",
    "eslint-plugin-react": "^7.37.5",
    "eslint-plugin-react-hooks": "^5.2.0",
    "exa-js": "^1.8.17",
    "globals": "^16.2.0",
    "nx": "^21.2.1",
    "patch-package": "^8.0.0",
    "postcss": "^8.5.6",
    "postcss-import": "^16.1.1",
    "prettier": "^3.6.0",
    "rimraf": "6.0.1",
    "tailwindcss": "^4.1.10",
    "ts-node": "^10.9.2",
    "tsx": "^4.20.3",
    "typescript": "^5.8.3",
    "vite": "^6.3.5",
    "vite-plugin-dts": "^4.5.4",
    "vite-plugin-webfont-dl": "^3.10.5",
    "vite-tsconfig-paths": "^5.1.4",
    "vitest": "^3.2.4"
  },
  "workspaces": [
    "apps/*",
    "packages/*",
    "widgets/*"
  ]
}
